imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

    - { resource: "@AuthBundle/Resources/config/services.yml" }
    - { resource: "@BucketBundle/Resources/config/services.yml" }
    - { resource: "@ObjectBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    doctrine.orm.entity_manager.class: BaseClasses\BaseEntityManager
    api_user_class: Modules\AuthBundle\Entity\User

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver:    'pdo_pgsql'
        host:      '%database_host%'
        port:      '%database_port%'
        dbname:    '%database_name%'
        user:      '%database_user%'
        password:  '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
#        naming_strategy: doctrine.orm.naming_strategy.underscore
#        auto_mapping: true
        default_entity_manager:   default
        entity_managers:
            default:
                connection:       default
                auto_mapping: true
                # enable metadata caching
                metadata_cache_driver: redis
                result_cache_driver: redis
                # enable query caching
                query_cache_driver: redis
                mappings:
                    AuthBundle: ~

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: DoctrineMigrations
    table_name: migration_versions
    name: Application Migrations


# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

sensio_framework_extra:
   router:
        annotations: false

# REDIS
snc_redis:
    clients:
        default:
            type:   '%redis_type%'
            alias:  '%redis_alias%'
            dsn:    '%redis_dsn%'
            logging: %kernel.debug%
        doctrine:
            type: predis
            alias: doctrine
            dsn: redis://localhost
            options:
                profile: 2.2
                connection_timeout: 10
                read_write_timeout: 30
    doctrine:
        metadata_cache:
            client: doctrine
            entity_manager: default
            document_manager: default
        result_cache:
            client: doctrine
            entity_manager: [default, read]
        query_cache:
            client: doctrine
            entity_manager: default

jms_serializer:
    handlers:
        datetime:
            default_format: "c" # ISO8601
            default_timezone: "UTC"
    property_naming:
        separator:
        lower_case: false
    metadata:
        auto_detection: true

nelmio_api_doc: ~

#REST
sensio_framework_extra:
    view:
        annotations: false

fos_rest:
    disable_csrf_role: ROLE_API
    routing_loader:
        default_format: json
    param_fetcher_listener: true
    body_listener: true
    body_listener:
        service: body_null_listener
    body_converter:
        enabled: true
    routing_loader:
        default_format: json
    serializer:
          serialize_null: true

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: api
    user_class: Modules\AuthBundle\Entity\User
    from_email:
        address:        support@amazonS3.ddev
        sender_name:    support
    service:
        mailer: fos_user.mailer.twig_swift

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: true
    paths:
        '^/v1/.*':
            allow_origin: ['docs.%app.domain%', '%app.domain%']
            allow_headers: ['X-Custom-Auth', 'accept', 'content-type', 'access-token', 'app-token', 'auth-token',
                            'Upload-Id', 'Portion-From', 'Portion-Size']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            hosts: ['api.%app.domain%']
            max_age: 3600